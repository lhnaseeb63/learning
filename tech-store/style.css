html {
    background-color: #f7f7f7;
 /*em relates the parent font size. 1 x parent size for 1em
   rem relates to the root. 1 x root fot 1rem   */
}

body{
    font-family: 'Barlow', sans-serif;
    background-color: white;
    margin: 0 auto;
    color: rgb(49, 46, 46);
    text-align: center;
}

header, footer {
   background: #333a40; 
   color: white;
   padding: 20px 10px;
}

/* square brackets is an attribute selector. We are looking for an attribute 'type' that's equal to 'search' */
input[type="search"] {
    width: 100%;
}

/* <!-- comma makes it apply to multiple elements --> */

ul {
    margin: 0;
    padding: 0;
    /* browsers sometimes have default values for 
    margin and padding and we want to reset this 
    to 0 */

    /* can paste this into our css to completely reset the css 
    https://meyerweb.com/eric/tools/css/reset/ */
}

li {
    list-style: none;
    line-height: 30px;
}

/* inside makes it so that the bullets are included in the 
body/document flow instead of protruding.  


list-style: square inside;

   can also use url() to link to an image to use as a bullet
*/

a {
    text-decoration: none;
    color: inherit;
}

a:hover {
    color: #0e69e9;
}

header li {
    display: inline;
}

header h1, nav{
    display: inline-block;
}

header h1 {

    width: 100%;
}

#name {
    background: red;
}

.product {
    box-sizing: border-box;
    border: 1px solid grey;
    /* width: 30%; */
    margin: 5px;
    padding: 5px;
    /* display: inline-block; */
    width: 100%;
    text-align: center;   
}

.button {
    padding: 10px;
    display: inline-block;
}

img {
    /* no larger than the container it's in */
    max-width: 100%;  
}

/* 
p:first-of-type{
    color: red;
}

pseudo selectors let us select target elements based on their state.
The first instance, last instance, etc. It's pretty neat! */

.button:last-of-type {
    background: #0e69e9;
    color: white;
}

/* Product Detail Page ---------------------------------- */
.product-detail {
    width: 660px;
}

.product-detail img {
    max-width: 50%;
    float: left;
}

table {
    width: 400px;
    text-align: left;
    margin: 20px 0;
    padding: 10px;
}

caption {
    font-weight: bold ;
    font-style: italic;
    border-bottom: 1px dotted;
    padding: 10px;
}

th, td {
    padding: 10px;
}

tr:hover {
    background: #f5f5f5;
}

/* Going to design for smaller screens first then making more versions as more screen space becomes available
using media queries.  

Good place to start: make the window as thin as possible. Then try to make the items full width and centered. 

*/
@media(min-width: 800px){
    input[type="search"] {
        width: 40%;
        /* twice the size it would normally be --> 2em */
        margin-left: 2em; 

    }
    .product {
        display: inline-block;
        width: 48%;
    }
}

@media(min-width: 1000px){
    body {
        text-align: left;
    }
    header h1 {
        width: 60%;
    }
    main {
        /* target / context = result --> convert pixel size to fluid, scalable size */
        /* 680 / 1000px = 0.68 * 100 = 68% , based on a 1k pixel container--> 680 + 270 = 1000 */
        width: 68%;
        display: inline-block;
        padding: 10px;

    }
    aside {
        /* 270 / 1000 = 0.27 * 100 = 27%  */
        width: 27%;
        display: inline-block;
        vertical-align: top;
        padding: 10px;
    } 
}

@media(min-width: 1200px){
   
    body {
        max-width: 80vw; 
         /*we can target the viewport (user's visible area of the screen) height and width using vh and vw. 50vw is half the screen width */
    }

    .product {
        width: 30%;
    }
    input[type="search"] {
        width: 20%;
    }

   
}


/* when we use a float the height of the elements is not taken into 
account which can cause some weirdness. To circumvent this we can 
try using overflow: auto;  */

/* with floats and non floated elements we can say that 
we dont want the element to be on the same height/line 
as a floated element on the left, right, or both using 
clear: left, clear:right, clear:both; */

/* #position {
    position: relative;
    top: 10px;
} */

/* relative relative to where it would normally be positioned in the document
absolute from the top of the page
fixed stays in position even if we scroll 
sticky also stays in place. Good for side bars */

/* Contact Us Page -----------------------------------------------*/

form {
    padding: 10px;
    margin: 10px 0;
    width: 600px;
}

form > div {
    /* all div tags that are a direct child of form */
    margin: 10px 0;
}

.inline label {
     width: 100px; /*cant set the width of inline elements */
     display: inline-block;
}

input[type="text"], input[type="email"], textarea {
    /* overriding textarea columns and rows */
    padding: 10px;
    width: 400px;
}